I"0<p align="center">
  <img width="460" height="300" src="https://raw.githubusercontent.com/eslam-mohamed-reda/hacking-resources/master/media/XSS.gif" />
</p>

<p>Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user.</p>

<blockquote>
  <h4 id="getting-your-xss-to-work">Getting Your XSS to Work</h4>
  <p><a href="https://hacking-resources.com/web-hacking/self-xss/" target="_blank">Turning self XSS to reflected</a></p>
</blockquote>

<blockquote>
  <h4 id="brute-xss-blog">Brute XSS blog</h4>
  <p><a href="https://brutelogic.com.br/blog/" target="_blank">Some good resources for XSS</a></p>
</blockquote>

<h2 id="xss-tools"><strong>XSS Tools:</strong></h2>

<h3 id="brute-xss"><a href="https://github.com/rajeshmajumdar/BruteXSS" target="_blank">Brute XSS</a></h3>
<p>GUI Tool written in Python</p>

<h4 id="xss-radar"><a href="https://github.com/bugbountyforum/XSS-Radar" target="_blank">XSS-Radar</a></h4>
<p>A Chrome extension for finding XSS</p>

<h4 id="domxssscanner"><a href="https://github.com/yaph/domxssscanner" target="_blank">domxssscanner</a></h4>
<p>A tool to find DOM based XSS</p>

<p><a href="https://github.com/eslam-mohamed-reda/hacking-resources/blob/master/XSS%20Payloads" target="_blank">For Manual Testing you can use payloads in here</a></p>

<hr />

<ul>
  <li>
    <h3 id="disclosed-xss-reports">Disclosed XSS Reports</h3>

    <ul>
      <li>
        <h4 id="disclosed-reflected-xss-reports">Disclosed Reflected XSS Reports</h4>

        <ul>
          <li>
            <p><a href="https://hackerone.com/reports/217790" target="_blank">XSS in $shop$.myshopify.com/admin/ via twine template injection in “Shopify.API.Modal.input” method when using a malicious app</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/264832" target="_blank">xss filter bypass [polldaddy]</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/104917" target="_blank">Cross-Site Scripting Reflected On Main Domain</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/104559" target="_blank">XSS on codex.wordpress.org</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/9522" target="_blank">https://polldaddy.com storage.swf XSS</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/374919" target="_blank">Content spoofing and potential Cross-Site Scripting vulnerability on www.hackerone.com</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/200034" target="_blank">[marketplace.informatica.com] Search XSS</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/360787" target="_blank">[account.mail.ru] XSS на странице восстановления пароля</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/335735" target="_blank">Reflected XSS of bbe-child-starter Theme via “value”-GET-parameter</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/316319" target="_blank">XSS on redirection page( Bypassed)</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/324136" target="_blank">XSS *.myshopify.com/collections/vendors?q=</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/314518" target="_blank">Reflected XSS+CSRF on secure.lahitapiola.fi</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/344112" target="_blank">XSS account.mail.ru in state JSON script</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/311639" target="_blank">Reflected XSS on https://www.zomato.com</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/293689" target="_blank">Query parameter reordering causes redirect page to render unsafe URL</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/422707" target="_blank">Reflected XSS on $Any$.myshopify.com/admin</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/470206" target="_blank">Reflected XSS in *.myshopify.com/account/register</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/230234" target="_blank">[mercantile.wordpress.org] Reflected XSS via AngularJS Template Injection</a></p>
          </li>
        </ul>
      </li>
      <li>
        <h4 id="disclosed-stored-xss-reports">Disclosed Stored XSS Reports</h4>

        <ul>
          <li>
            <p><a href="https://hackerone.com/reports/216822" target="_blank">Stored XSS via transloadit.com and imageproxy</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/264177" target="_blank">XSS when replying / forwarding to a malicious email on iOS</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/275386" target="_blank">Stored XSS Using Media</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/27511" target="_blank">ads.twitter.com xss</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/425048" target="_blank">Stored XSS on chaturbate.com (wish list)</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/409850" target="_blank">XSS in steam react chat client</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/263876" target="_blank">Stored XSS Deleting Menu Links in the Shopify Admin</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/245296" target="_blank">Persistent XSS on keybase.io via “payload” field in <code class="language-plaintext highlighter-rouge">/user/sigchain_signature.toffee</code> template</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/232174" target="_blank">XSS on $shop$.myshopify.com/admin/ and partners.shopify.com via whitelist bypass in SVG icon for sales channel applications</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/245172" target="_blank">Double Stored Cross-Site scripting in the admin panel</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/270999" target="_blank">[Markdown] Stored XSS via character encoding parser bypass</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/230029" target="_blank">Stored XSS in Pages SEO dialog Name field (concrete5 8.1.0)</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/223331" target="_blank">[demo.weblate.org] Stored Self-XSS via Editor Link in Profile</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/241008" target="_blank">Stored XSS in *.myshopify.com</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/247521" target="_blank">Stored XSS in Name field in User Groups/Group Details form</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/300532" target="_blank">Stored XSS on Add Event in Calendar</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/287688" target="_blank">Stored XSS On Wordpress Infogram plugin</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/289313" target="_blank">[gem server] Stored XSS via crafted JavaScript URL inclusion in Gemspec</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/282209" target="_blank">Stored XSS in the Custom Logo link (non-Basic plan required)</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/275515" target="_blank">Stored XSS in dev-ucrm-billing-demo.ubnt.com In Client Custom Attribute</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/267473" target="_blank">XSS in OLX.pl (“title” in new advertisement)</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/267177" target="_blank">stored xss in invited team member via email parameter</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/251224" target="_blank">Blind stored xss [parcel.grab.com] &gt; name parameter</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/287562" target="_blank">Stored XSS in content when Graph is created via API</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/300270" target="_blank">Stored XSS in learnboost.com via the lesson[goals] parameter</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/284082" target="_blank">Javascript Payload reflected Back in Report Embed Code</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/280495" target="_blank">Stored Cross-Site scripting in the infographics using links</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/294505" target="_blank">Cross-site scripting in “Contact customer” form</a></p>
          </li>
        </ul>
      </li>
      <li>
        <h4 id="disclosed-dom-xss-reports">Disclosed DOM XSS Reports</h4>

        <ul>
          <li>
            <p><a href="https://labs.detectify.com/2015/02/20/finding-an-xss-in-an-html-based-android-application/" target="_blank">DOM XSS vulnerability in search dialogue</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/297968" target="_blank">Persistent DOM-based XSS in https://help.twitter.com via localStorage</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/282909" target="_blank">Report Design Critical Stored DOM XSS Vulnerability</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/324303" target="_blank">DOM Based XSS in mycrypto.com</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/351275" target="_blank">DOM Based XSS charting_library</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/164821" target="_blank">OX Guard: DOM Based Cross-Site Scripting</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/398054" target="_blank">DOM Based XSS in www.hackerone.com via PostMessage</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/125498" target="_blank">Dom Based Xss</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/230435" target="_blank">DOM Based XSS In mercantile.wordpress.org</a></p>
          </li>
          <li>
            <p><a href="https://sites.google.com/site/bughunteruniversity/best-reports/account-recovery-xss" target="_blank">Account Recovery XSS : Google</a></p>
          </li>
          <li>
            <p><a href="https://hackerone.com/reports/241619" target="_blank">DOM-based XSS in store.starbucks.co.uk on IE 11</a></p>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<div class="sharebuttons">
  <hr />
  
      <p class="sharetitle"> Share this: </p>
	  <!-- AddToAny BEGIN -->
<div class="a2a_kit a2a_kit_size_32 a2a_default_style">
<a class="a2a_button_email"></a>
<a class="a2a_button_linkedin"></a>
<a class="a2a_button_hacker_news"></a>
<a class="a2a_button_facebook"></a>
<a class="a2a_button_twitter"></a>
</div>
<script async="" src="https://static.addtoany.com/menu/page.js"></script>
<!-- AddToAny END -->
</div>

:ET